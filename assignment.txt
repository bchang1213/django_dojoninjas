Create 5 books with the following names: C sharp, Java, Python, PHP, Ruby
	Book.objects.create(name ="C Sharp", desc = "c sharp")

	Book.objects.create(name ="Java", desc = "java")

	Book.objects.create(name ="Python", desc = "Python")

	Book.objects.create(name ="PHP", desc = "PHP")

	Book.objects.create(name ="Ruby", desc = "Ruby")

Create 5 different authors: Mike, Speros, John, Jadee, Jay
	Author.objects.create(first_name = "Mike", last_name = "Duncan", email="mike@duncan.com")

	Author.objects.create(first_name = "Speros", last_name = "Speros", email="speros@speros.com")
	
	Author.objects.create(first_name = "john", last_name = "john", email="john@john.com")


	Author.objects.create(first_name = "jadee", last_name = "jadee", email="jadee@jadee.com")

	Author.objects.create(first_name = "jay", last_name = "jay", email="jay@jay.com")
	
Add a new field in the authors table called 'notes'.  Make this a TextField.

Successfully create and run the migration files.

Change the name of the 5th book to C#
	b= Book.objects.get(id =5)

	b.name = "C#"

	b.save()

Change the first_name of the 5th author to Ketul
	b = Author.objects.get(id = 5)

	b.first_name = "Ketul"

	b.save()

Assign the first author to the first 2 books
	b = Author.objects.get(id = 1)

	b.save()

	a = Book.objects.get(id = 1)

	a.save()

	b.books.add(a)

	a = Book.objects.get(id = 2)

	a.save()

	b.books.add(a)

	b.save()

Assign the second author to the first 3 books

	book1 = Book.objects.get(id = 1)

	book1.save()

	book2 = Book.objects.get(id = 2)

	book2.save()

	book3 = Book.objects.get(id = 3)

	book3.save()

	author2 = Author.objects.get(id = 2)

	author2.save()

	author2.books.add(book1, book2, book3)

Assign the third author to the first 4 books
	book4 = Book.objects.get(id = 4)

	book4.save()

	author3 = Author.objects.get(id = 3)

	author3.books.add(book1, book2, book3, book4)

	author3.save()

Assign the fourth author to the first 5 books (or in other words, all the books)
	author4 = Author.objects.get(id=4)
	author4.save()
	book5 = Book.objects.get(id = 5)
	book5.save()
	author4.books.add(book1, book2, book3, book4, book5)

For the 3rd book, retrieve all the authors
	book3.authors.all()

For the 3rd book, remove the first author
	book3.authors.first()

For the 2nd book, add the 5th author as one of the authors
	author5 = Author.objects.get(id = 5)
	author5.save()
	author5.books.add(book2)

Find all the books that the 3rd author is part of
	author3.books.all()

Find all the books that the 2nd author is part of
	author2.books.all()
